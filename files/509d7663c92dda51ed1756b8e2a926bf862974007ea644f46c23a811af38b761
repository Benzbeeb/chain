#!/usr/bin/env python3

import sys
import json
import requests

HEADERS = {"Content-Type": "application/json"}

SYMBOLS_WITH_WEIGHTS = [
    ["BTC", 0.010475476356156912],
    ["ETH", 0.05950003767881494],
    ["BNB", 0.08450240820758922],
    ["ADA", 11.428339495605405],
    ["DOT", 0.3736374406329859],
    ["XRP", 19.63409129702476],
    ["LTC", 0.030225676012251852],
    ["LINK", 0.17832224518274925],
    ["BCH", 0.009351445479947436],
    ["XLM", 9.449123626565537],
    ["DOGE", 45.28874038079542],
    ["XEM", 2.668994201213789],
    ["AAVE", 0.005236629086342221],
    ["CRO", 12.600328118232557],
    ["ATOM", 0.10069845304058375],
    ["EOS", 0.4832519628608695],
    ["TRX", 32.83258657808629],
    ["HT", 0.10446586311116192],
    ["MIOTA", 0.9526860657108375],
    ["THETA", 0.4037759448685495],
    ["NEO", 0.03314885840321384],
    ["FTT", 0.0412412719369898],
    ["XTZ", 0.3539292927972679],
    ["VET", 27.469713474485747],
    ["SNX", 0.04929594457692384],
    ["MKR", 0.0004118468256963729],
    ["ALGO", 0.8466825995984507],
    ["LEO", 0.4264208398517793],
    ["KSM", 0.0032393431505807818],
    ["COMP", 0.0019936419914021782],
    ["BTT", 462.90547324046605],
    ["ZIL", 4.99826808296842],
    ["YFI", 1.7920593964223333e-05],
    ["UMA", 0.02035823640638155],
    ["REN", 0.40737536125598134],
    ["ZRX", 0.3602671225978243],
    ["OKB", 0.029067685829686156],
    ["ICX", 0.23937225585058836],
    ["DGB", 5.701171635027124],
    ["ONT", 0.33120395087714993],
    ["CELO", 0.08092801804105693],
    ["BAT", 0.5950606508586235],
    ["OMG", 0.0655181713048136],
    ["QTUM", 0.03940038620541879],
    ["KNC", 0.08996268754275591],
]


def main(url):
    symbols, weights = zip(*SYMBOLS_WITH_WEIGHTS)
    payload = {"symbols": symbols, "min_count": 10, "ask_count": 16}
    result = requests.request("POST", url, headers=HEADERS, json=payload).json()
    prices = [float(px["px"]) / float(px["multiplier"]) for px in result["result"]]
    acc = 0
    for (p, w) in zip(prices, weights):
        acc += float(p) * w
    return acc


if __name__ == "__main__":
    try:
        print(main(*sys.argv[1:]))
    except Exception as e:
        print(str(e), file=sys.stderr)
        sys.exit(1)
